image: docker:20.10.16

services:
  - docker:20.10.16-dind

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - deploy

before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
    - docker build --file ".docker/env/develop/Dockerfile" --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

.deploy:
  stage: deploy
  script:
    - apk add openssh-client
    - eval "$(ssh-agent -s)"
    - echo "$DEPLOYMENT_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOYMENT_IP >> ~/.ssh/known_hosts
    - ssh $DEPLOYMENT_USER@$DEPLOYMENT_IP -t "
      mkdir -p $PATH_PROJECT;
      mkdir -p $PATH_PROJECT/config;"
    - scp -P22 -r .docker/env/$MODE/* $DEPLOYMENT_USER@$DEPLOYMENT_IP:$PATH_PROJECT
    - scp -P22 -r .docker/config/* $DEPLOYMENT_USER@$DEPLOYMENT_IP:$PATH_PROJECT/config
    - ssh $DEPLOYMENT_USER@$DEPLOYMENT_IP -t "
      cd $PATH_PROJECT;
      echo -e BRANCH=$CI_COMMIT_REF_SLUG > .env;
      echo IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG >> .env;
      echo HOST=${CI_COMMIT_REF_SLUG}.${CI_PROJECT_NAME} >> .env;
      echo ROUTER=${CI_COMMIT_REF_SLUG}_${CI_PROJECT_NAME} >> .env;
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY;
      docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG;
      docker compose up -d --remove-orphans;
      "

development:
  extends: .deploy
  only:
    - dev
    - main
  variables:
    PATH_PROJECT: /var/www/web/sites/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    MODE: develop
    DEPLOYMENT_KEY: $DEVELOPMENT_KEY
    DEPLOYMENT_IP: $DEVELOPMENT_IP
    DEPLOYMENT_USER: $DEVELOPMENT_USER
